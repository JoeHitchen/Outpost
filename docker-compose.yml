version: "3.7"

services:
  client:
    build: outpost-py
    image: outpost-client
    environment:
      - DOCKER_HOST=dockerd.$DOMAIN:2375
      - REGISTRY_HOST=registry.$DOMAIN
      - GATEWAY_REQUEST=redis://gateway.$DOMAIN/0
      - GATEWAY_RESPONSE=redis://gateway.$DOMAIN/1
    volumes:
      - ./outpost-py/version_number.txt:/usr/src/app/version_number.txt
    depends_on:
      - dockerd
      - gateway_messages
  
  registry:
    image: registry
    restart: always
    hostname: registry.$DOMAIN
    volumes:
      - registry:/var/lib/registry
      - /etc/letsencrypt:/crt:ro
    environment:
      - REGISTRY_HTTP_ADDR=0.0.0.0:443
      - REGISTRY_HTTP_TLS_CERTIFICATE=/crt/live/registry.$DOMAIN/fullchain.pem
      - REGISTRY_HTTP_TLS_KEY=/crt/live/registry.$DOMAIN/privkey.pem
    networks:
      - default
      - gateway
  
  registry_ui:
    image: parabuzzle/craneoperator:latest
    restart: always
    ports:
      - 8000:80
    environment:
      - REGISTRY_HOST=registry.$DOMAIN
      - REGISTRY_PROTOCOL=https
      - REGISTRY_PORT=443
    depends_on:
      - registry
  
  dockerd:
    image: docker:dind
    restart: always
    hostname: dockerd.$DOMAIN
    privileged: true
    ports:
      - 8080:8000
    environment:
      - DOCKER_TLS_CERTDIR=  # Disable TLS
    volumes:
      - dockerd:/var/lib/docker
  
  gateway_messages:
    image: redis:alpine
    restart: always
    hostname: gateway.$DOMAIN
    volumes:
      - gateway_messages:/data
    networks:
      - gateway
      - default
  
  gateway_dashboard:
    build: queue_ui
    image: outpost-queue-ui
    restart: always
    command: --broker=redis://gateway.$DOMAIN/0
    ports:
      - 5556:5555
    networks:
      - gateway
    depends_on:
      - gateway_messages
  
  gateway_dockerd:
    image: docker:dind
    restart: always
    hostname: gateway-dockerd.$DOMAIN
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=  # Disable TLS
    volumes:
      - gateway_dockerd:/var/lib/docker
    networks:
      - gateway
  
  gateway_worker:
    build: outpost-py
    image: outpost-worker
    restart: always
    command: celery --app=gateway worker --loglevel=info
    environment:
      - DOCKER_HOST=gateway-dockerd.$DOMAIN:2375
      - REGISTRY_HOST=registry.$DOMAIN
      - GATEWAY_REQUEST=redis://gateway.$DOMAIN/0
      - GATEWAY_RESPONSE=redis://gateway.$DOMAIN/1
      - TXRX_REQUEST=redis://txrx.$DOMAIN/0
      - TXRX_RESPONSE=redis://txrx.$DOMAIN/1
      - RX_DATA=/usr/rx
    volumes:
      - txrx_data:/usr/rx
    networks:
      - gateway
    depends_on:
      - txrx_messages
      - gateway_messages
      - gateway_dockerd
  
  txrx_messages:
    image: redis:alpine
    restart: always
    hostname: txrx.$DOMAIN
    volumes:
      - txrx_messages:/data
    networks:
      - txrx
      - gateway
  
  txrx_dashboard:
    build: queue_ui
    image: outpost-queue-ui
    restart: always
    command: --broker=redis://txrx.$DOMAIN/0
    ports:
      - 5555:5555
    networks:
      - txrx
    depends_on:
      - txrx_messages
  
  txrx_dockerd:
    image: docker:dind
    restart: always
    hostname: txrx-dockerd.$DOMAIN
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=  # Disable TLS
    volumes:
      - txrx_dockerd:/var/lib/docker
    networks:
      - txrx
  
  txrx_worker:
    build: outpost-py
    image: outpost-worker
    restart: always
    command: celery --app=txrx worker --loglevel=info
    environment:
      - DOCKER_HOST=txrx-dockerd.$DOMAIN:2375
      - DOCKER_BUILD_DIR=/var/build/target
      - TXRX_REQUEST=redis://txrx.$DOMAIN/0
      - TXRX_RESPONSE=redis://txrx.$DOMAIN/1
      - RX_DATA=/tmp
    volumes:
      - txrx_data:/tmp
      - ./target-py:/var/build/target
    networks:
      - txrx
    depends_on:
      - txrx_messages
      - txrx_dockerd

volumes:
  registry:
  dockerd:
  gateway_messages:
  gateway_dockerd:
  txrx_messages:
  txrx_dockerd:
  txrx_data:

networks:
  default:
  gateway:
  txrx:


